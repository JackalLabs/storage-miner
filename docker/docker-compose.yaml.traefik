version: "3.6"
# WORK IN PROGRESS - DO NOT USE

volumes:
  filedata:
  lecerts:

services:
  traefik-light:
    image: traefik:v2.6 # The official v2 Traefik docker image
    container_name: traefik-light
    restart: unless-stopped
    volumes:
      - "lecerts:/letsencrypt"
    command:
      - "--providers.docker=true"
      - "--providers.docker.network=jkl-net"
      - "--providers.docker.network=proxy"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.endpoint=tcp://socket-proxy:2375"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls.certResolver=le-resolver"
      - "--entrypoints.websecure.http.tls.domains[0].main=${ROOT_DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=traefik.${ROOT_DOMAIN}"
      - "--entrypoints.ipfstcp.address=:4001"
      - "--entrypoints.ipfsudp.address=:4001/udp"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=${PROVIDER}"
      - "--certificatesresolvers.myresolver.acme.email=${LE_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    environment:
      #  Other Providers Supported :: https://doc.traefik.io/traefik/https/acme/#providers
      - "DO_AUTH_TOKEN=${DO_AUTH_TOKEN}"
    ports:
      - "80:80"
      - "443:443"
      - "4001:4001"
    labels:
      - "traefik.docker.network=jkl-net"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.jackal-traefik.rule=Host(`traefik.`${ROOT_DOMAIN})"
      - "traefik.http.routers.jackal-traefik.service=jackal-traefik"
      - "traefik.http.routers.jackal-traefik.entrypoints=websecure"
      - "traefik.http.routers.jackal-traefik.tls=true"
      - "traefik.http.routers.jackal-traefik.tls.certresolver=le-resolver"
      - "traefik.http.services.jackal-traefik.loadbalancer.server.port=8080"

  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      CONTAINERS: 1
    labels:
      - "traefik.docker.network=proxy"
      - "traefik.tcp.services.docker-proxy.loadbalancer.server.port=2375"

  ipfs-jkl:
    image: ipfs/go-ipfs:v0.10.0
    container_name: ipfs-jkl
    depends_on:
      - traefik-light
    restart: unless-stopped
    volumes:
     - "filedata:/data/ipfs"
    labels:
      - "traefik.docker.network=jkl-net"
      - "traefik.http.services.jackal-ipfs.loadbalancer.server.port=5001"
      - "traefik.tcp.routers.jackal-tcp.rule=HostSNI(`{domain:.+}`)"
      - "traefik.tcp.routers.jackal-tcp.entrypoints=ipfstcp"
      - "traefik.tcp.routers.jackal-tcp.service=jackal-tcp"
      - "traefik.tcp.routers.jackal-tcp.tls=true"
      - "traefik.tcp.routers.jackal-tcp.tls.certresolver=le-resolver"
      - "traefik.tcp.services.jackal-tcp.loadbalancer.server.port=4001"
      - "traefik.udp.routers.jackal-udp.entrypoints=ipfsudp"
      - "traefik.udp.routers.jackal-udp.service=jackal-udp"
      - "traefik.udp.services.jackal-udp.loadbalancer.server.port=4001"

  jkl-prime:
    build:
      context: ./
      dockerfile: Dockerfile
    working_dir: "/node/package"
    container_name: jkl-prime
    depends_on:
      - traefik-light
    restart: unless-stopped
    command: "npm run start"
    labels:
      - "traefik.docker.network=jkl-net"
      - "traefik.http.routers.jackal-tls.rule=Host(${ROOT_DOMAIN})"
      - "traefik.http.routers.jackal-tls.service=jackal-tls"
      - "traefik.http.routers.jackal-tls.entrypoints=websecure"
      - "traefik.http.routers.jackal-tls.tls=true"
      - "traefik.http.routers.jackal-tls.tls.certresolver=le-resolver"
      - "traefik.http.services.jackal-tls.loadbalancer.server.port=3000"
